--学生表
create table student(
       stu_id number(10),
       stu_name varchar2(20)
)
tablespace users
  pctfree 10
  initrans 10
  maxtrans 255
  storage
  (
    initial 128K
    next 128K
    minextents 1
    maxextents unlimited
  );

--课程表
create table course(
       cou_id number(10),
       cou_name varchar2(20)
)
tablespace users
  pctfree 10
  initrans 10
  maxtrans 255
  storage
  (
    initial 128K
    next 128K
    minextents 1
    maxextents unlimited
  );

--成绩表
create table score(
       stu_id number(10),
       cou_id number(20),
       score number(20)
)
tablespace users
  pctfree 10
  initrans 10
  maxtrans 255
  storage
  (
    initial 128K
    next 128K
    minextents 1
    maxextents unlimited
  );
  
--成绩汇总表
create table total(
       cname varchar2(20),
       sum_score number(10),
       avg_score number(10)
)
tablespace users
  pctfree 10
  initrans 10
  maxtrans 255
  storage
  (
    initial 128K
    next 128K
    minextents 1
    maxextents unlimited
  );

--截断表
truncate table total


--查询所有用户的表
select * from all_tables（能在所有用户中查询）
select * from dba_tables(只能在管理员用户中查询)


-- 查询本用户的所有表的全部信息
select * from user_tables; 

 
-- 查询所有用户的表,视图等
select * from all_tab_comments
 
 
-- 查询本用户的表,视图等
select * from user_tab_comments
 
 
--查询所有用户的表的列名和注释.
select * from all_col_comments
 
 
-- 查询本用户的表的列名和注释
select * from user_col_comments


--查询（XX用户）的所有表（必须在管理员用户中查询）
select * from dba_tables where owner='用户名大写'
 
 
--查询所有用户的表的列名等信息(详细但是没有备注).
select * from all_tab_columns
 
 
--查询本用户的表的列名等信息(详细但是没有备注).
select * from user_tab_columns


--修改用户名
update user$ set name='S1' where user#=83;


--修改用户密码
alter user S1 identified by 123456;


--删除用户
drop user your_username cascade;


--查看所有用户
select * from dba_users;   
select * from all_users;   
select * from user_users;（本用户的用户） 


--查看所有用户(只能在管理员用户中查询)
select user#,name,password from user$（查看user#及name，password）
select * from user$


--查看哪些用户有sysdba或sysoper系统权限(查询时需要相应权限)
select * from V$PWFILE_USERS 


--查看用户对象权限
select * from all_tab_privs;
select * from user_tab_privs;


--查看当前用户所拥有的权限
select * from user_sys_privs;


--重定义数据文件的大小（不能小于该数据文件已用空间的大小）
alter database datafile 'filename' resize 8g


--drop从回收站清空数据释放内存
drop table table_name;
purge table table_name;
或drop table table_name purge;


--drop表后恢复数据
flashback table table_name to before drop;


--delete后恢复数据
select * from flashback_transaction_query where table_name='TABLE_NAME';

SQL>select count(*) from t1;

COUNT(*)

----------

9318

2.误删除所有记录

并且提交更改。

SQL>delete from t1;

9318 rows deleted.

SQL>commit;

Commit complete.

SQL>select count(*) from t1;

COUNT(*)

----------

0

3.获得当前SCN

如果能够确切知道删除之前SCN最好，如果不知道，可以进行闪回查询尝试.

SQL>select dbms_flashback.get_system_change_number from dual;
(或者SQL>select * from flashback_transaction_query where table_name='TABLE_NAME';)

GET_SYSTEM_CHANGE_NUMBER

------------------------

10671006

SQL>select count(*) from t1 as of scn 10671000;

COUNT(*)

----------

0

SQL>select count(*) from t1 as of scn 10670000;

COUNT(*)

----------

9318

我们看到在SCN=10670000时，数据都在。

4.恢复数据.

SQL>insert into t1 select * from t1 as of scn 10670000;

9318 rows created.

SQL>commit;

Commit complete.

SQL>select count(*) from t1;

COUNT(*)

----------

9318



--误删数据后的还原???

select timestamp_to_scn(to_timestamp('2009-03-13 09:00:00','YYYY-MM-DD HH:MI:SS')) from dual;

结果:13526973

--create table reporttest as select * from reportinfo AS OF SCN 13526973;

这是reporttest表中就是scn点的reportinfo数据.处理即可。

--查询用户中所有的表名及表中的数据量
create or replace function count_rows(table_name in varchar2,owner in varchar2 default null)
  return number authid current_user IS num_rows number;stmt varchar2(2000);
begin
  if owner is null then
    stmt := 'select count(*) from "' || table_name || '"';
  else
    stmt := 'select count(*) from "' || owner || '"."' || table_name || '"';
  end if;
  execute immediate stmt
    into num_rows;
  return num_rows;
end;

select table_name, count_rows(table_name) nrows from user_tables;

--oracle中编写注释
comment on column TABLE_NAME.TABLE_COL_NAME is '这个字段是。。。'

--删除用户再重建
drop user newuser cascade;

